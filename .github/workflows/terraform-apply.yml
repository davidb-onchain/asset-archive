name: Terraform Apply

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'deploy/public-dev/infra/**'

permissions:
  contents: read

jobs:
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest

    env:
      TF_DIR: deploy/public-dev/infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Determine Environment from Push Branch
        id: environment
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "workspace=prod" >> $GITHUB_OUTPUT
            echo "do_token=${{ secrets.DO_PROD }}" >> $GITHUB_OUTPUT
            echo "spaces_key_id=${{ secrets.TF_STATE_BUCKET_PROD_KEY_ID }}" >> $GITHUB_OUTPUT
            echo "spaces_key_secret=${{ secrets.TF_STATE_BUCKET_PROD_KEY_SECRET }}" >> $GITHUB_OUTPUT
            echo "ssh_key_fingerprints=${{ secrets.SSH_KEY_FINGERPRINTS_PROD }}" >> $GITHUB_OUTPUT
            echo "media_bucket_name=${{ secrets.MEDIA_BUCKET_NAME_PROD }}" >> $GITHUB_OUTPUT
            echo "allowed_ssh_ips=${{ secrets.ALLOWED_SSH_IP_PROD }}" >> $GITHUB_OUTPUT
            echo "frontend_url=${{ secrets.FRONTEND_URL_PROD }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "develop" ]]; then
            echo "workspace=dev" >> $GITHUB_OUTPUT
            echo "do_token=${{ secrets.DO_DEV }}" >> $GITHUB_OUTPUT
            echo "spaces_key_id=${{ secrets.TF_STATE_BUCKET_DEV_KEY_ID }}" >> $GITHUB_OUTPUT
            echo "spaces_key_secret=${{ secrets.TF_STATE_BUCKET_DEV_KEY_SECRET }}" >> $GITHUB_OUTPUT
            echo "ssh_key_fingerprints=${{ secrets.SSH_KEY_FINGERPRINTS }}" >> $GITHUB_OUTPUT
            echo "media_bucket_name=${{ secrets.MEDIA_BUCKET_NAME }}" >> $GITHUB_OUTPUT
            echo "allowed_ssh_ips=${{ secrets.ALLOWED_SSH_IP }}" >> $GITHUB_OUTPUT
            echo "frontend_url=${{ secrets.FRONTEND_URL }}" >> $GITHUB_OUTPUT
          else
            echo "Invalid push branch for apply. Exiting."
            exit 1
          fi

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="access_key=${{ steps.environment.outputs.spaces_key_id }}" \
            -backend-config="secret_key=${{ steps.environment.outputs.spaces_key_secret }}"
        working-directory: ${{ env.TF_DIR }}
        env:
          DIGITALOCEAN_TOKEN: ${{ steps.environment.outputs.do_token }}

      - name: Terraform Workspace
        run: terraform workspace select ${{ steps.environment.outputs.workspace }} || terraform workspace new ${{ steps.environment.outputs.workspace }}
        working-directory: ${{ env.TF_DIR }}
        env:
          DIGITALOCEAN_TOKEN: ${{ steps.environment.outputs.do_token }}

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="ssh_key_fingerprints=${{ steps.environment.outputs.ssh_key_fingerprints }}" \
            -var="media_bucket_name=${{ steps.environment.outputs.media_bucket_name }}" \
            -var="allowed_ssh_ips=${{ steps.environment.outputs.allowed_ssh_ips }}" \
            -var="frontend_url=${{ steps.environment.outputs.frontend_url }}"
        working-directory: ${{ env.TF_DIR }}
        env:
          DIGITALOCEAN_TOKEN: ${{ steps.environment.outputs.do_token }}
