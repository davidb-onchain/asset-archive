name: Terraform Plan & Apply

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
    branches:
      - develop
    paths:
      - 'deploy/infra/**'
      - '.github/workflows/terraform.yml'
  push:
    branches:
      - develop
    paths:
      - 'deploy/infra/**'
      - '.github/workflows/terraform.yml'
  workflow_dispatch:

jobs:
  plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.9

    - name: Terraform Format
      id: fmt
      run: terraform -chdir=deploy/infra fmt -check

    - name: Terraform Init
      id: init
      env:
        DO_PAT: ${{ secrets.DO_PAT }}
        SPACES_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
        SPACES_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
      run: |
        terraform -chdir=deploy/infra init \
          -backend-config="access_key=$SPACES_ACCESS_KEY_ID" \
          -backend-config="secret_key=$SPACES_SECRET_ACCESS_KEY"

    - name: Terraform Validate
      id: validate
      run: terraform -chdir=deploy/infra validate -no-color

    - name: Terraform Plan
      id: plan
      env:
        DO_PAT: ${{ secrets.DO_PAT }}
        SPACES_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
        SPACES_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
        TF_VAR_do_token: ${{ secrets.DO_PAT }}
        TF_VAR_spaces_access_key_id: ${{ secrets.SPACES_ACCESS_KEY_ID }}
        TF_VAR_spaces_secret_access_key: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      run: |
        terraform -chdir=deploy/infra plan -no-color -out=tfplan
        terraform -chdir=deploy/infra show -no-color tfplan > deploy/infra/plan.txt

    - name: Add Plan to PR (or Job Summary)
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const path = 'deploy/infra/plan.txt';
          const plan = fs.readFileSync(path, 'utf8');

          const body = `#### Terraform Plan ðŸ“–\n\n\`\`\`\n${plan}\n\`\`\`\n*Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body,
            });
          } catch (err) {
            core.warning(`Unable to comment on PR (likely permissions on forks). Falling back to job summary. Error: ${err.message}`);
            await core.summary
              .addHeading('Terraform Plan')
              .addCodeBlock(plan, 'hcl')
              .addRaw(`\nPushed by: @${{ github.actor }} | Action: \`${{ github.event_name }}\``)
              .write();
          }

  apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && (github.event_name == 'workflow_dispatch' || github.event_name == 'push')

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.9

    - name: Terraform Init
      id: init
      env:
        DO_PAT: ${{ secrets.DO_PAT }}
        SPACES_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
        SPACES_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
      run: |
        terraform -chdir=deploy/infra init \
          -backend-config="access_key=$SPACES_ACCESS_KEY_ID" \
          -backend-config="secret_key=$SPACES_SECRET_ACCESS_KEY"

    - name: Terraform Apply
      env:
        DO_PAT: ${{ secrets.DO_PAT }}
        SPACES_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
        SPACES_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
        TF_VAR_do_token: ${{ secrets.DO_PAT }}
        TF_VAR_spaces_access_key_id: ${{ secrets.SPACES_ACCESS_KEY_ID }}
        TF_VAR_spaces_secret_access_key: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      run: terraform -chdir=deploy/infra apply -auto-approve 